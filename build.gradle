plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id "com.google.protobuf" version "0.8.15"
    id "org.owasp.dependencycheck" version "7.4.4"
}

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 11
targetCompatibility = 11

ext {
    grpcVersion                 = '1.38.1'
    protobufVersion             = '3.18.0'
    serviceGeneratorVersion     = '3.1.12'

    genDir              = file("${project.rootDir}/src/gen")
    sharedDir           = file("${project.rootDir}/shared")
}

repositories {
    mavenCentral()
    maven {
            name 'Sonatype_snapshots'
            url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
            name 'Sonatype_releases'
            url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:3.1.0')

    api 'com.exactpro.th2:grpc-common:3.8.0'

    api "com.google.protobuf:protobuf-java-util"
    api "io.grpc:grpc-stub"
    implementation "io.grpc:grpc-protobuf"
    implementation "io.grpc:grpc-core"
    implementation "io.grpc:grpc-netty"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    api "com.exactpro.th2:grpc-service-generator:${serviceGeneratorVersion}"
}

sourceSets {
    main {
        proto {
            srcDirs 'src/main/proto'
        }
        java {
            srcDirs 'src/gen/main/java', 'src/gen/main/grpc', 'src/gen/main/services/java/src'
        }
        resources {
            srcDirs 'src/gen/main/services/java/resources'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
        services {
            artifact = "com.exactpro.th2:grpc-service-generator:${serviceGeneratorVersion}:all@jar"
        }
    }
    generateProtoTasks.generatedFilesBaseDir = genDir
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            services {
                option 'javaInterfacesPath=./java/src'
                option 'javaInterfacesImplPath=./java/src'
                option 'javaMetaInfPath=./java/resources'
                option 'pythonPath=./python'
            }
        }
        ofSourceSet('main')
    }
}

// java {
//     withJavadocJar()
//     withSourcesJar()
// }


publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
              name = rootProject.name
              packaging = 'jar'
              description = rootProject.description
              url = vcs_url
              scm {
                url = vcs_url
              }
              licenses {
                license {
                  name = 'The Apache License, Version 2.0'
                  url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
              }
              developers {
                developer {
                  id = 'developer'
                  name = 'developer'
                  email = 'developer@exactpro.com'
                }
              }
              scm {
                url = vcs_url
              }
            }
        }
    }
    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
        maven {
            name = "fury"
            url = "https://maven.fury.io/maximus905/"

            authentication {
                basic(BasicAuthentication)
            }

            credentials {
                username = project.findProperty('uploadToken')
                password = "NOPASS"
            }
        }
    }
}

clean {
    delete genDir
}

dependencyCheck {
    formats=['SARIF']
}
