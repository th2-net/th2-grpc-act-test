name: Dev build and publish Python distributions to PyPI. New gRPC generator

on:
  push:
    branches-ignore:
    - master
    - version-*
    paths:
    - package_info.json
    - gradle.properties
    paths-ignore:
      - README.md

jobs:
  build-n-publish:
    name: Dev build and Python distributions to PyPI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
# Prepare custom build version
    - name: Get package version
      id: pack_ver
      uses: notiz-dev/github-action-json-property@release
      with: 
        path: package_info.json
        prop_path: package_version
    - name: Build custom package version
      id: release_ver
      run: echo ::set-output name=value::"${{ steps.pack_ver.outputs.prop }}.dev${{ github.run_id }}"
    - name: Show package version
      run: echo ${{ steps.release_ver.outputs.value }}
    - name: Set version for current build in package_info.json
      uses: MerthinTechnologies/edit-json-action@v1
      with:
        filename: './package_info.json'
        key: 'package_version'
        value: ${{ steps.release_ver.outputs.value }}
# Build and publish
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Build with Gradle
      run: ./gradlew clean build
    - name: Build package
      run: |
        pip install -r requirements.txt
        python setup.py generate -s
        python setup.py sdist
    - name: Set release_name env var
      run: |
        echo "RELEASE_NAME=$(python setup.py --fullname)" >> $GITHUB_ENV
      shell: bash
    - name: Push to GemFury
      run: |
        package_file="dist/${{ env.RELEASE_NAME }}.tar.gz"
        echo "Publishing package: ${package_file}"
        curl -F package=@${package_file} https://${{ secrets.PYPI_PUSH_TOKEN }}@push.fury.io/maximus905/
      shell: bash
