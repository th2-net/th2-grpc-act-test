name: Build and publish Python distributions to PyPI. New gRPC generator

on:
  push:
    branches:
      - master
#    paths:
#    - package_info.json

jobs:
  build-n-publish:
    name: Build and Python distributions to PyPI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Get package version
      id: version
      uses: notiz-dev/github-action-json-property@release
      with:
        path: package_info.json
        prop_path: package_name
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Build with Gradle
      run: ./gradlew clean build
    - name: Build package
      run: |
        pip install -r requirements.txt
        python setup.py generate -s
        python setup.py sdist
    - name: Build custom package version
      id: release_name
      run: echo ::set-output name=value::"$(python setup.py --fullname)"
    - name: Set env vars
      run: |
        echo "RELEASE_NAME=$(python setup.py --fullname)" >> $GITHUB_ENV
      shell: bash
    # - name: Publish distribution to Test PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_PASSWORD }}
    #     repository_url: https://test.pypi.org/legacy/

    # - name: Publish distribution to PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.PYPI_PASSWORD }}
    #     repository_url: https://upload.pypi.org/legacy/

    - name: Push to GemFury
      run: |
        package_file="dist/${{ env.RELEASE_NAME }}.tar.gz"
        echo "Publishing package: ${package_file}"
        curl -F package=@${package_file} https://${{ secrets.PYPI_PUSH_TOKEN }}@push.fury.io/maximus905/
      shell: bash
